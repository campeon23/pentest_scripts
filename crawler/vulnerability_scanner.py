#!/usr/bin/env python
import argparse
import scanner
from bs4 import BeautifulSoup

'''
        Run the script by providing the required arguments in the following format:
        
        python vulnerability_scanner.py --target_url "http://target.com" --form_url "http://target.com/form" --login_url "http://target.com/login" \
            --username "admin" --password "password" --links_to_ignore "http://target.com/logout".
        
        The script will scan the target URL and print the results of the vulnerability scan to the terminal.
'''


class VulnerabilityScanner:
    """Vulnerability Scanner to test for XSS in forms and links."""

    def __init__(self, target_url, form_url, links_to_ignore, login_url, username, password):
        self.target_url = target_url
        self.form_url = form_url
        self.login_url = login_url
        self.links_to_ignore = links_to_ignore
        self.data_dict = {'username': username,
                          'password': password,
                          'Login': 'submit'
                          }

        # Initialize scanner with the target URL and links to ignore
        self.vuln_scanner = scanner.Scanner(
            self.target_url, self.links_to_ignore)

        # Log in to the session
        self.vuln_scanner.session.post(self.login_url, data=self.data_dict)

    def run_scanner(self):
        """Extract forms and test for XSS vulnerabilities in forms and links."""

        forms = self.vuln_scanner.extract_forms(self.form_url)
        print(forms)

        response = self.vuln_scanner.test_xss_in_form(forms[0], self.form_url)
        print('test_xss_in_form: ', response)

        response = self.vuln_scanner.test_xss_in_link(
            self.form_url + '?name=test')
        print('test_xss_in_link: ', response)

        self.vuln_scanner.crawl()
        self.vuln_scanner.run_scanner()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Vulnerability Scanner")

    parser.add_argument("-t", "--target-url", dest="target_url", type=str,
                        required=True, help="Target URL to scan")
    parser.add_argument("-f", "--form-url", dest="form_url", type=str, required=True,
                        help="URL of the form to scan")
    parser.add_argument("-l", "--login-url", dest="login_url", type=str,
                        required=True, help="Login URL")
    parser.add_argument("-u", "--username", dest="username", type=str,
                        required=True, help="Login username")
    parser.add_argument("-p", "--password", dest="password", type=str,
                        required=True, help="Login password")
    parser.add_argument("-i", "--links-to-ignore", dest="links_to_ignore", nargs="*", required=False, default=[],
                        help="List of links to ignore during the scan")

    args = parser.parse_args()

    scanner = VulnerabilityScanner(args.target_url, args.form_url, args.links_to_ignore,
                                   args.login_url, args.username, args.password)

    scanner.run_scanner()
